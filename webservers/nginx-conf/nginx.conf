# Configuration File - Nginx Server Configs
# taken from HTML 5 Boilerplate
# https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf

# Run as a unique, less privileged user for security reasons.
# Default: nobody nobody
user www-data;

# Sets the worker threads to the number of CPU cores available in the system for best performance.
# Should be > the number of CPU cores.
# Maximum number of connections = worker_processes * worker_connections
# Default: 1
worker_processes auto;

# Maximum number of open files per worker process.
# Should be > worker_connections.
# Default: no limit
worker_rlimit_nofile 8192;

# The file storing the process ID of the main process
# Default: nginx.pid
pid /run/nginx.pid;

events {
    # If you need more connections than this, you start optimizing your OS.
    # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
    # Should be < worker_rlimit_nofile.
    # Default: 512
    worker_connections 8000;

    #
    # Let each process accept multiple connections.
    # Accept as many connections as possible, after nginx gets notification
    # about a new connection.
    # May flood worker_connections, if that option is set too low.
    #
    multi_accept on;

    #
    # Preferred connection method for newer linux versions.
    # Essential for linux, optmized to serve many clients with each thread.
    #
    use epoll;
}

http {

    ##
    # Basic Settings
    ##

    # Hide nginx version information.
    # Default: on
    server_tokens off;

    # Specify MIME types for files.
    include mime.types;

    # Default: text/plain
    default_type application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    # Default: text/html text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml
    charset_types
        text/css
        text/plain
        text/vnd.wap.wml
        application/javascript
        application/json
        application/rss+xml
        application/xml;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    # For performance reasons, on FreeBSD systems w/ ZFS
    # this option should be disabled as ZFS's ARC caches
    # frequently used files in RAM by default.
    # Default: off
    sendfile on;

    # Don't send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out.
    # Default: off
    tcp_nopush on;

    # When downloading a full Web page, TCP_NODELAY can save you
    # up to 0.2 second on every HTTP request. This option bypasses Nagle
    # which prevents sending a packet that would be too small.
    tcp_nodelay on;

    # Internal parameter to speed up hashtable lookups
    types_hash_max_size 2048;


    ##
    # Timeouts
    ##

    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 60;     # Default: 60
    client_header_timeout 60;   # Default: 60

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    keepalive_timeout 65;   # Default: 65
    send_timeout 60;        # Default: 60

    # Allow the server to close the connection after a client stops responding.
    # Frees up socket-associated memory.
    reset_timedout_connection on;


    ##
    # Override some buffer limitations, will prevent DDOS too.
    ##
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 4 8k;


    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;


    ##
    # Logging Settings
    ##
    # Include $http_x_forwarded_for within default format used in log files
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main buffer=16k flush=30s;
    error_log /var/log/nginx/error.log;


    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_disable msie6;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_vary on;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;
    # text/html is always compressed by HttpGzipModule

    # Cache informations about FDs, frequently accessed static files (JS, CSS, ...)
    # can boost performance, but you need to test those values
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;


    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}